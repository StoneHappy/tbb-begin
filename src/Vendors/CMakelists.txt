if(NOT TARGET ENTT)
    option(TBB_TEST "Enable testing" OFF)
    option(TBB_EXAMPLES "Enable examples" OFF)
    option(TBB_STRICT "Treat compiler warnings as errors" ON)
    option(TBB_WINDOWS_DRIVER "Build as Universal Windows Driver (UWD)" OFF)
    option(TBB_NO_APPCONTAINER "Apply /APPCONTAINER:NO (for testing binaries for Windows Store)" OFF)
    option(TBB4PY_BUILD "Enable tbb4py build" OFF)
    option(TBB_BUILD "Enable tbb build" ON)
    option(TBBMALLOC_BUILD "Enable tbbmalloc build" ON)
    option(TBB_CPF "Enable preview features of the library" OFF)
    option(TBB_FIND_PACKAGE "Enable search for external oneTBB using find_package instead of build from sources" OFF)
    option(TBB_DISABLE_HWLOC_AUTOMATIC_SEARCH "Disable HWLOC automatic search by pkg-config tool" OFF)
    option(TBB_ENABLE_IPO "Enable Interprocedural Optimization (IPO) during the compilation" ON)
    add_subdirectory(oneTBB)
    set_target_properties(tbb PROPERTIES FOLDER Vendors/oneTBB)
    set_target_properties(tbbmalloc PROPERTIES FOLDER Vendors/oneTBB)
    set_target_properties(tbbmalloc_proxy PROPERTIES FOLDER Vendors/oneTBB)
endif()

if(NOT TARGET gtest_main)
    add_subdirectory(googletest)
    set_target_properties(gtest_main PROPERTIES FOLDER Vendors/googletest)
    set_target_properties(gtest PROPERTIES FOLDER Vendors/googletest)
    set_target_properties(gmock PROPERTIES FOLDER Vendors/googletest)
    set_target_properties(gmock_main PROPERTIES FOLDER Vendors/googletest)
endif()